version: '3.8'

services:
  movie_service:
    build:
      context: ./movie-service
      dockerfile: Dockerfile
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./movie-service/:/app/
    ports:
      - 8001:8000
    environment:
      - DATABASE_URI=postgresql://movie_db_username:movie_db_password@movie_db/movie_db_dev
      - CAST_SERVICE_HOST_URL=http://cast_service:8000/api/v1/casts/
    depends_on:
      - movie_db

  movie_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data_movie:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=movie_db_username
      - POSTGRES_PASSWORD=movie_db_password
      - POSTGRES_DB=movie_db_dev

  cast_service:
    build:
      context: ./cast-service
      dockerfile: Dockerfile
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./cast-service/:/app/
    ports:
      - 8002:8000
    environment:
      - DATABASE_URI=postgresql://cast_db_username:cast_db_password@cast_db/cast_db_dev
    depends_on:
      - cast_db

  cast_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data_cast:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=cast_db_username
      - POSTGRES_PASSWORD=cast_db_password
      - POSTGRES_DB=cast_db_dev

  book_service:
    build:
      context: ./book-service
      dockerfile: Dockerfile
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./book-service/:/app/
    ports:
      - 8003:8000
    environment:
      - DATABASE_URI=postgresql://book_db_username:book_db_password@book_db/book_db_dev
    depends_on:
      - book_db

  book_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data_book:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=book_db_username
      - POSTGRES_PASSWORD=book_db_password
      - POSTGRES_DB=book_db_dev

  auth_service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./auth-service/:/app/
    ports:
      - 8004:8000
    environment:
      - DATABASE_URI=postgresql://auth_db_username:auth_db_password@auth_db/auth_db_dev
    depends_on:
      - auth_db

  auth_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data_auth:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=auth_db_username
      - POSTGRES_PASSWORD=auth_db_password
      - POSTGRES_DB=auth_db_dev

  user_service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./user-service/:/app/
    ports:
      - 8005:8000
    environment:
      - DATABASE_URI=postgresql://auth_db_username:auth_db_password@auth_db/auth_db_dev
    depends_on:
      - auth_db

  order_service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./order-service/:/app/
    ports:
      - 8006:8000
    environment:
      - DATABASE_URI=postgresql://order_db_username:order_db_password@order_db/order_db_dev
      - BOOK_SERVICE_HOST_URL=http://book_service:8000/api/v1/books/
    depends_on:
      - order_db

  order_db:
    image: postgres:12.1-alpine
    volumes:
      - postgres_data_order:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=order_db_username
      - POSTGRES_PASSWORD=order_db_password
      - POSTGRES_DB=order_db_dev

  nginx:
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx_config.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - cast_service
      - movie_service
      - book_service
      - auth_service
      - user_service
      - order_service

volumes:
  postgres_data_movie:
  postgres_data_cast:
  postgres_data_book:
  postgres_data_auth:
  postgres_data_order:
